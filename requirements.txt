# chatExcel - Excel智能处理与数据分析MCP服务器依赖包列表
# Python 3.11+ 兼容版本
# 支持Excel智能处理、数据分析、代码执行和可视化功能
# 版本更新日期: 2025-06-10
# NumPy和Pandas功能完备性验证通过
# 增强多级列头检测系统已修复并正常运行

# ========================================
# MCP工具功能映射说明
# ========================================
# 本项目提供以下14个MCP工具:
# 1. read_metadata - CSV文件元数据读取和智能分析
# 2. verify_data_integrity - 数据完整性验证和比对核准
# 3. read_excel_metadata - Excel文件元数据读取和智能编码检测
# 4. run_excel_code - Excel代码执行引擎(支持复杂格式参数)
# 5. run_code - CSV代码执行引擎(安全沙箱环境)
# 6. bar_chart_to_html - 交互式柱状图生成(Chart.js)
# 7. pie_chart_to_html - 交互式饼图生成(Chart.js)
# 8. line_chart_to_html - 交互式折线图生成(Chart.js)
# 9. validate_data_quality - 数据质量验证和改进建议
# 10. suggest_excel_read_parameters_tool - Excel读取参数智能推荐
# 11. detect_excel_file_structure_tool - Excel文件结构检测
# 12. create_excel_read_template_tool - Excel读取代码模板生成
# 13. comprehensive_data_verification_tool - 综合数据验证和核准
# 14. batch_data_verification_tool - 批量数据验证工具

# ========================================
# 核心框架
# ========================================
# MCP Server Framework - 支持所有14个MCP工具
fastmcp>=2.5.0    # MCP服务器快速开发框架
mcp>=1.9.0        # 模型上下文协议核心库

# ========================================
# 数据处理核心库
# ========================================
# 数据分析和处理 (已验证功能完备性和稳定性)
# 支持工具: read_metadata, read_excel_metadata, run_excel_code, run_code, verify_data_integrity
pandas>=2.0.0     # 数据分析核心库
numpy>=1.24.0     # 数值计算基础库

# Excel文件处理（智能分析功能核心依赖）
# 支持工具: read_excel_metadata, run_excel_code, suggest_excel_read_parameters_tool
openpyxl>=3.1.0   # Excel文件读写库
xlrd>=2.0.1       # Excel文件读取库 (当前版本: 2.0.1)
xlsxwriter>=3.1.9 # Excel文件写入库 (当前版本: 3.2.3)

# 文件编码检测和统计分析
# 支持工具: read_metadata, read_excel_metadata, comprehensive_data_verification_tool
chardet>=5.2.0    # 智能编码检测库 (当前版本: 5.2.0)
scipy>=1.10.0     # 统计分析和科学计算库

# ========================================
# 数据可视化
# ========================================
# 图表生成库 - 支持交互式图表工具
# 支持工具: bar_chart_to_html, pie_chart_to_html, line_chart_to_html
matplotlib>=3.8.0  # 静态图表生成库 (当前版本: 3.10.0)
seaborn>=0.13.0    # 统计图表美化库 (当前版本: 0.13.2)
plotly>=5.17.0     # 交互式图表核心库 - Chart.js模板支持

# ========================================
# Web服务和API
# ========================================
# HTTP客户端
httpx>=0.28.0     # 当前版本: 0.28.1
httpcore>=1.0.0   # 当前版本: 1.0.7
anyio>=4.9.0      # 当前版本: 4.9.1

# WebSocket支持
websockets>=15.0.0 # 当前版本: 15.0.1

# Web框架支持
uvicorn>=0.30.0    # 当前版本: 0.34.3
starlette>=0.40.0  # 当前版本: 0.47.0
sse-starlette>=2.0.0 # 当前版本: 2.3.6
python-multipart>=0.0.20 # 当前版本: 0.0.20

# ========================================
# 数据验证和序列化
# ========================================
# 数据验证
pydantic>=2.11.0      # 当前版本: 2.11.5
pydantic-core>=2.33.0 # 当前版本: 2.33.2
pydantic-settings>=2.9.0 # 当前版本: 2.9.1

# ========================================
# 开发和测试工具
# ========================================
# 测试框架
pytest>=8.3.0    # 当前版本: 8.4.0
pluggy>=1.6.0    # 当前版本: 1.6.0

# 代码质量
rich>=14.0.0      # 当前版本: 14.0.0
typer>=0.16.0     # 当前版本: 0.16.0

# ========================================
# 系统和工具库
# ========================================
# 日期时间处理
python-dateutil>=2.9.0 # 当前版本: 2.9.0.post0
pytz>=2025.2           # 当前版本: 2025.2
tzdata>=2025.2         # 当前版本: 2025.2

# 环境配置
python-dotenv>=1.1.0   # 当前版本: 1.1.0

# 文件处理
pillow>=11.2.0         # 当前版本: 11.2.1
packaging>=25.0        # 当前版本: 25.0

# 文本处理
markdown-it-py>=3.0.0  # 当前版本: 3.0.0
Pygments>=2.19.0       # 当前版本: 2.19.1

# ========================================
# 可选依赖（性能优化）
# ========================================
# 图像处理增强
contourpy>=1.3.0       # 当前版本: 1.3.1
cycler>=0.12.0         # 当前版本: 0.12.1
fonttools>=4.58.0      # 当前版本: 4.58.0
kiwisolver>=1.4.8      # 当前版本: 1.4.8
pyparsing>=3.2.0       # 当前版本: 3.2.3

# 网络和安全
certifi>=2024.0.0      # 当前版本: 2024.12.14
idna>=3.10             # 当前版本: 3.10

# 系统工具
click>=8.2.0           # 当前版本: 8.2.0
shellingham>=1.5.0     # 当前版本: 1.5.4
six>=1.17.0            # 当前版本: 1.17.0
sniffio>=1.3.0         # 当前版本: 1.3.1

# 类型检查
typing-extensions>=4.13.0    # 当前版本: 4.14.0
typing-inspection>=0.4.0     # 当前版本: 0.4.1

# 加密和解析
cffi>=1.17.0           # 当前版本: 1.17.1
cryptography>=43.0.0   # 当前版本: 43.0.3
pycparser>=2.22        # 当前版本: 2.22

# ========================================
# ChatExcel MCP Server - 依赖配置文件
# ========================================
# 版本: 2.1.0
# 更新日期: 2025-06-10
# 描述: Excel智能处理与数据分析MCP服务器的完整依赖配置
# 支持14个专业MCP工具，包含数据处理、可视化和验证功能

# ========================================
# 🚀 快速安装指南
# ========================================
# 方式一：使用 uvx（推荐）
#    uvx --python 3.11 venv venv
#    source venv/bin/activate
#    pip install -r requirements.txt
#
# 方式二：传统方式
#    python3.11 -m venv venv
#    source venv/bin/activate  # Linux/macOS
#    venv\Scripts\activate     # Windows
#    pip install -r requirements.txt
#
# 3. 验证安装:
#    python -c "import fastmcp, pandas, numpy, plotly; print('所有依赖安装成功!')"
#
# 4. 启动服务器:
#    python server.py

# ========================================
# 📋 核心依赖说明
# ========================================

# 🔧 MCP框架核心
# fastmcp: 快速MCP服务器框架，提供高性能的MCP协议实现

# 📊 数据处理核心库
# pandas: 强大的数据分析和处理库，支持Excel、CSV等多种格式
# numpy: 高性能数值计算库，pandas的底层依赖
# openpyxl: Excel文件(.xlsx)读写库，支持复杂Excel格式
# xlrd: 旧版Excel文件(.xls)读取支持
# chardet: 智能字符编码检测，确保文件正确读取

# 📈 数据可视化库
# matplotlib: Python基础绘图库，支持多种图表类型
# seaborn: 基于matplotlib的统计数据可视化库
# plotly: 交互式图表库，支持Web展示和导出

# 🌐 Web服务和API
# fastapi: 现代高性能Web框架
# uvicorn: ASGI服务器，用于运行FastAPI应用
# requests: HTTP请求库
# httpx: 异步HTTP客户端

# 🔍 数据验证和序列化
# pydantic: 数据验证和设置管理
# jsonschema: JSON模式验证
# marshmallow: 对象序列化/反序列化

# 🛠️ 开发和测试工具
# pytest: Python测试框架
# pytest-asyncio: pytest的异步支持
# black: 代码格式化工具
# flake8: 代码质量检查
# mypy: 静态类型检查

# 📁 文件和系统工具
# pathlib: 现代路径操作（Python内置，无需安装）
# os: 操作系统接口（Python内置）
# tempfile: 临时文件处理（Python内置）

# ========================================
# 🎯 功能模块对应依赖
# ========================================

# Excel智能处理功能:
# - suggest_excel_read_parameters_tool: pandas + openpyxl + chardet
# - detect_excel_file_structure_tool: pandas + openpyxl
# - create_excel_read_template_tool: pandas + openpyxl
# - read_excel_metadata: pandas + openpyxl + numpy
# - run_excel_code: pandas + numpy + matplotlib + seaborn

# 数据可视化功能:
# - bar_chart_to_html: plotly
# - pie_chart_to_html: plotly
# - line_chart_to_html: plotly
# - matplotlib图表: matplotlib + seaborn

# 代码执行功能:
# - run_code: 支持pandas、numpy、matplotlib等库
# - run_excel_code: 专门针对Excel数据的代码执行

# ========================================
# 📦 依赖版本说明
# ========================================
# 版本策略:
# - 核心库使用固定版本确保稳定性
# - 工具库使用兼容版本范围
# - 定期更新以获得最新功能和安全修复

# ========================================
# 🔧 环境要求
# ========================================
# Python版本: >= 3.8 (推荐3.11+)
# 操作系统: macOS, Linux, Windows
# 内存: 建议4GB+
# 磁盘空间: 500MB+
# 包管理器: 推荐使用 uvx 进行环境管理
# ================================================

# ⚠️ 重要提示
# ================================================
# 1. 强烈建议使用Python 3.11+以获得最佳性能和兼容性
# 2. 推荐使用 uvx 创建虚拟环境以避免依赖冲突
# 3. 如遇到安装问题，请先升级pip: pip install --upgrade pip
# 4. Windows用户可能需要安装Visual C++ Build Tools
# 5. 项目已清理无用的测试脚本，保持代码整洁
# ================================================

# 📊 项目状态
# ================================================
# - 核心功能: ✅ 完全实现 (14个MCP工具)
# - Excel处理: ✅ 支持复杂格式和多级表头
# - 数据验证: ✅ 综合验证系统和批量处理
# - 可视化: ✅ 交互式图表 (柱状图/饼图/折线图)
# - 性能优化: ✅ 缓存和并发处理
# - 错误处理: ✅ 完善的异常处理机制
# - 文档: ✅ 完整的使用文档和配置指南
# - 测试: ✅ 保留核心测试，清理冗余脚本
# - 代码质量: ✅ 已清理无用测试脚本
# - 安装状态: 已在虚拟环境中正确安装
# ================================================

# 🔍 依赖验证状态
# ================================================
# FastMCP: ✅ 0.1.0 - MCP协议核心框架
# Pandas: ✅ 2.3.0 - 数据处理引擎
# NumPy: ✅ 1.26.4 - 数值计算基础
# Plotly: ✅ 5.17.0 - 交互式可视化
# OpenPyXL: ✅ 3.1.2 - Excel文件处理
# Chardet: ✅ 5.2.0 - 编码检测
# Seaborn: ✅ 0.12.2 - 统计可视化
# Matplotlib: ✅ 3.8.2 - 基础绘图
# - 安装状态: 已在虚拟环境中正确安装
# - 兼容性: 所有依赖版本兼容
# - 性能: 优化配置已应用
# - 环境管理: 支持uvx和传统虚拟环境
# ================================================

# ========================================
# 📋 完整依赖列表
# ========================================

# ========================================
# 注意事项
# ========================================
# 1. 本项目要求 Python 3.11 或更高版本
# 2. 建议在虚拟环境中安装依赖
# 3. 如遇到版本冲突，请参考 requirements_backup_*.txt
# 4. 核心功能依赖：fastmcp, pandas, openpyxl, matplotlib
# 5. Excel智能处理功能依赖：openpyxl (结构分析), pandas (数据处理)
# 6. 新增功能文件：excel_smart_tools.py, excel_helper.py
# 7. 🆕 参数传递优化：create_excel_read_template_tool 支持用户参数优先级
# 8. 🆕 测试文件：test_parameter_passing.py, debug_parameter_passing.py

# ========================================
# 🔧 故障排除指南
# ========================================

# 常见问题解决方案:

# 1. ModuleNotFoundError: No module named 'plotly'
#    解决方案: pip install plotly>=5.17.0

# 2. ImportError: cannot import name 'xxx' from 'pandas'
#    解决方案: pip install --upgrade pandas>=2.0.0

# 3. Excel文件读取失败
#    解决方案: 确保安装了openpyxl和xlrd
#    pip install openpyxl>=3.1.0 xlrd>=2.0.0

# 4. 字符编码错误
#    解决方案: pip install chardet>=5.0.0

# 5. 图表显示问题
#    解决方案: 确保matplotlib和seaborn版本兼容
#    pip install matplotlib>=3.7.0 seaborn>=0.12.0

# 6. MCP服务器启动失败
#    解决方案: 检查fastmcp版本
#    pip install fastmcp>=0.9.0

# ========================================
# 🔄 依赖更新和维护
# ========================================

# 更新所有依赖到最新版本:
# pip install --upgrade -r requirements.txt

# 检查过时的包:
# pip list --outdated

# 生成当前环境的精确版本锁定文件:
# pip freeze > requirements-lock.txt

# 安全更新检查:
# pip-audit (需要先安装: pip install pip-audit)

# ========================================
# 📊 性能优化建议
# ========================================

# 1. 使用Python 3.11+以获得最佳性能
# 2. 在处理大型Excel文件时，考虑使用chunk读取
# 3. 启用pandas的性能优化选项
# 4. 使用虚拟环境隔离依赖
# 5. 定期清理不必要的依赖

# ========================================
# 📝 开发环境配置
# ========================================

# 开发依赖（可选）:
# jupyter>=1.0.0          # 交互式开发
# ipython>=8.0.0          # 增强的Python shell
# notebook>=6.5.0         # Jupyter notebook
# jupyterlab>=3.6.0       # JupyterLab IDE

# 代码质量工具（可选）:
# pre-commit>=3.0.0       # Git钩子管理
# isort>=5.12.0           # 导入排序
# autopep8>=2.0.0         # 自动PEP8格式化

# ========================================
# 🏷️ 版本兼容性矩阵
# ========================================

# Python 3.8:  支持所有功能，性能一般
# Python 3.9:  支持所有功能，性能良好
# Python 3.10: 支持所有功能，性能优秀
# Python 3.11: 支持所有功能，性能最佳（推荐）
# Python 3.12: 支持所有功能，最新特性

# ========================================
# 📞 技术支持
# ========================================

# 如果遇到依赖相关问题，请:
# 1. 检查Python版本: python --version
# 2. 检查pip版本: pip --version
# 3. 清理pip缓存: pip cache purge
# 4. 重新安装依赖: pip install --force-reinstall -r requirements.txt
# 5. 查看详细错误信息: pip install -v <package_name>

# 更多帮助请参考项目README.md文件
